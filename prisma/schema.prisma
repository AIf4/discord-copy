// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password String
  name  String?
  nickname String?
  active Boolean @default(true)
  roles     Role[]   @relation("UserRoles")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleteAt  DateTime?
  Message Message[]
  Participant Participant[]
}

model Role {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  permissions Permission[] @relation("RolePermissions")
  users       Users[]      @relation("UserRoles")
}

model Permission {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  roles       Role[]  @relation("RolePermissions")
}

model Channel {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleteAt    DateTime?
  Message Message[]
  Participant Participant[]
}

model Participant {
  id          Int     @id @default(autoincrement())
  userId      Int
  channelId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleteAt    DateTime?
  channel     Channel  @relation(fields: [channelId], references: [id])
  user        Users    @relation(fields: [userId], references: [id])
}

model Message {
  id          Int     @id @default(autoincrement())
  content     String
  isRead      Boolean @default(false)
  isGroup     Boolean @default(false)
  channelId   Int
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleteAt    DateTime?
  channel     Channel  @relation(fields: [channelId], references: [id])
  user        Users    @relation(fields: [userId], references: [id])
}
